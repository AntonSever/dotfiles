import sublime
import sublime_plugin
import re


class SqlUpperCommand(sublime_plugin.TextCommand):

    def run(self, edit):
        region = sublime.Region(0, self.view.size())
        raw_text = self.view.substr(region)

        for word in RESERVED_WORDS:
            # pattern = r'(?!\B"[^"]*)(?:\b' + word + r'\b)(?![^"]*"\B)'
            pattern = r'\b{}\b'.format(word)
            pattern = re.compile(pattern, re.IGNORECASE)
            raw_text = pattern.sub(word.upper(), raw_text)

        self.view.replace(edit, region, raw_text)
        self.view.window().status_message('Ololo')


RESERVED_WORDS = (
    'add',
    'aggregate',
    'all',
    'alter',
    'analytic',
    'and',
    'anti',
    'api_version',
    'as',
    'asc',
    'avro',
    'between',
    'bigint',
    'binary',
    'boolean',
    'buckets',
    'by',
    'cached',
    'cascade',
    'case',
    'cast',
    'change',
    'char',
    'class',
    'close_fn',
    'column',
    'columns',
    'comment',
    'compute',
    'count',
    'create',
    'cross',
    'current',
    'data',
    'database',
    'databases',
    'date',
    'datetime',
    'decimal',
    'delete',
    'delimited',
    'desc',
    'describe',
    'distinct',
    'distribute',
    'div',
    'double',
    'drop',
    'else',
    'end',
    'escaped',
    'exists',
    'explain',
    'extended',
    'external',
    'false',
    'fields',
    'fileformat',
    'finalize_fn',
    'first',
    'float',
    'following',
    'for',
    'format',
    'formatted',
    'from',
    'full',
    'function',
    'functions',
    'grant',
    'group',
    'hash',
    'having',
    'if',
    'ignore',
    'ilike',
    'in',
    'incremental',
    'init_fn',
    'inner',
    'inpath',
    'insert',
    'int',
    'integer',
    'intermediate',
    'interval',
    'into',
    'invalidate',
    'iregexp',
    'is',
    'join',
    'last',
    'left',
    'like',
    'limit',
    'lines',
    'load',
    'location',
    'merge_fn',
    'metadata',
    'not',
    'null',
    'nulls',
    'offset',
    'on',
    'or',
    'order',
    'outer',
    'over',
    'overwrite',
    'parquet',
    'parquetfile',
    'partition',
    'partitioned',
    'partitions',
    'preceding',
    'prepare_fn',
    'produced',
    'purge',
    'range',
    'rcfile',
    'real',
    'refresh',
    'regexp',
    'rename',
    'replace',
    'restrict',
    'returns',
    'revoke',
    'right',
    'rlike',
    'role',
    'roles',
    'row',
    'rows',
    'schema',
    'schemas',
    'select',
    'semi',
    'sequencefile',
    'serdeproperties',
    'serialize_fn',
    'set',
    'show',
    'smallint',
    'split',
    'stats',
    'stored',
    'straight_join',
    'string',
    'sum',
    'symbol',
    'table',
    'tables',
    'tblproperties',
    'terminated',
    'textfile',
    'then',
    'timestamp',
    'tinyint',
    'to',
    'true',
    'truncate',
    'unbounded',
    'uncached',
    'union',
    'update',
    'update_fn',
    'use',
    'using',
    'values',
    'varchar',
    'view',
    'when',
    'where',
    'with',
)
